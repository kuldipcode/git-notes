* Configuration
git config --list --global

git config --global user.name "Kuldipkumar Prajapati"
git config --global user.email "kuldip.code@gmail.com"

* Git basic commands
git checkout -b dev
git status
git add firstfile.txt
git commit -m "initial commit"  
git status     

git remote add origin https://github.com/kuldipcode/git-notes.git
git branch -M main (The -M <Branch> command renames the specified upstream branch from the old name to the new name)
git push -u origin main (publish main local branches to remote)
git push --all -u (publish all local branches to remote)

git push origin --delete bad-branch-name (delete remote branch)

git log --graph --oneline --decorate --all

* When downloading content from a remote repo:

git pull and git fetch commands are available to accomplish the task. 
git fetch updates your remote-tracking branches under refs/remotes/<remote>/. 
This operation is safe to run at any time since it never changes any of your local branches under refs/heads.

git diff main origin/main
git merge origin/main (git pull run this automatically)

If you have local changes on your master that aren't reflected on origin, you might want git rebase origin/master to make sure your commits are 'on top'


git pull is the more aggressive alternative; it will download the remote content for the active local branch and immediately execute git merge to create a merge commit for the new remote content. 
If you have pending changes in progress this will cause conflicts and kick-off the merge conflict resolution flow.


